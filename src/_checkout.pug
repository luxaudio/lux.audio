// Checkout Modal
.checkout-modal.modal
  .modal-close
    h1 &#10005;

// Checkout widget
.checkout-container
  .checkout
    input#cart-collapsed(type='checkbox')
    ul.steps
      li
        .step-number
          .step-circle 1
        .step-description PAYMENT INFO
      li
        .step-number
          .step-circle 2
        .step-description SHIPPING INFO
      li
        .step-number
          .step-circle 3
        .step-description COMPLETED
    .continue-shopping
      h1 &#10005;
    checkout
      .parts
        .part
          .contact-information
            h1
              | Contact
            .fields
              user-email.input(placeholder='Email')
              user-name.input(placeholder='Name')
          .payment-information
            h1
              | Payment
              span.secured-text
                | SSL Secure
                span Checkout
                img.lock-icon(src='img/lock-icon.svg')
            .fields
              card-name.input(placeholder='Name on Card')
              card-number.input(name='number', placeholder='Card Number')
                img.card-logo.amex-logo(src='img/card-logos/amex.svg')
                img.card-logo.discover-logo(src='img/card-logos/discover.svg')
                img.card-logo.jcb-logo(src='img/card-logos/jcb.svg')
                // img.card-logo.maestro-logo(src='img/card-logos/maestro.svg')
                img.card-logo.mastercard-logo(src='img/card-logos/mastercard.svg')
                img.card-logo.visa-logo(src='img/card-logos/visa.svg')
              card-expiry.input(name='expiry', placeholder='MM / YY')
              card-cvc.input(name='cvc', placeholder='CVC')
            p.cards-accepted
              // img.card-logo.maestro-logo(src='img/card-logos/maestro.svg')
              img.card-logo.visa-logo(src='img/card-logos/visa.svg')
              img.card-logo.mastercard-logo(src='img/card-logos/mastercard.svg')
              img.card-logo.discover-logo(src='img/card-logos/discover.svg')
              img.card-logo.amex-logo(src='img/card-logos/amex.svg')
              // img.card-logo.jcb-logo(src='img/card-logos/jcb.svg')
              a.stripe-link(href='//www.stripe.com', target='_blank')
                img.stripe-logo(src='img/stripelogo.png')
            // p.legal
            //   | Transactions are always encrypted.  Credit card information is never stored.
          // img.security-code(src='img/card-logos/security-code.svg')
          // <div class="confirmation">
          // <h1>
          // Almost Done
          // </h1>

        .part
          .shipping-information
            h1
              | Shipping
            .fields
              shippingaddress-name.input(placeholder='Recipient')
              shippingaddress-line1.input(placeholder='Address')
              shippingaddress-line2.input(placeholder='Suite')
            .fields
              shippingaddress-city.input(placeholder='City')
              shippingaddress-postalcode.input(placeholder='Postal Code')
            .fields
              shippingaddress-state.input(placeholder='State')
              shippingaddress-country.input(placeholder='Country')
          terms
            label(for='terms')
              | I have read and accept the&nbsp;
              a(href='terms', target='_blank') terms and conditions

        .part
          .thankyou
            p
              | Your order number is&nbsp;
              strong
              | .
            p(style='text-align:center') Tell your friends to get Stoned!
            ul.social
              li
                a(href=social.facebook.shareLink, target='_blank')
                  i.fa.fa-facebook-square
              li
                a(href=social.twitter.shareLink, target='_blank')
                  i.fa.fa-twitter
              li
                a(href=social.email.shareLink)
                  i.fa.fa-envelope

      button(class='{ loading: loading || checkedOut }', __disabled='{ loading || checkedOut }', type='submit')
        span Continue &#8594;
        span Checkout
      .error(if='{ errorMessage }')
        | { errorMessage }
      br
      p.legal
        a(href='returns', target='_blank') Return&nbsp;Policy
        a(href='privacy', target='_blank') Privacy&nbsp;Policy
        a(href='terms', target='_blank') Terms&nbsp;of&nbsp;Service

    cart
      h1
        label(for='cart-collapsed') Details
        label.expand-summary(for='cart-collapsed')
          img(src='img/info-black.svg')
        .invoice-amount
          | { renderCurrency(data.get('order.currency'), data.get('order.total'))} { data.get('order.currency').toUpperCase() }
      lineitems(if='{ !isEmpty() }')
        .animated.slideInRight
          .product-image-container
            img(src="img/products/earphone.jpg", alt="{ data.get('productName') }")
          // .product-image-container(if="{ data.get('productSlug').indexOf('SC') != 0 }")
          //   img(src="/images/products/kits/{data.get('productSlug')}.png", alt="{ data.get('productName') }")
          // .product-image-container(if="{ data.get('productSlug').indexOf('SC') == 0 }")
          //   img(src="/images/products/scent-backgrounds/{data.get('productSlug').replace('-S','')}-bg.png", alt="{ data.get('productName') }")
          //   img(src="/images/products/scent-candles/{data.get('productSlug').replace('-S','')}.png", alt="{ data.get('productName') }")
          .product-text-container
            span.product-description
              span.product-name { data.get('productName') }
              p { data.get('description') }
          span.product-quantity-container.locked(if="{ data.get('locked') }")
            | { data.get('quantity') }
          span.product-quantity-container(if="{ !data.get('locked') }")
            quantity-select-control
          .product-price-container.invoice-amount
            .product-price
              | { renderCurrency(parentData.get('currency'), data.get().price * data.get().quantity) } { parentData.get('currency').toUpperCase() }
            .product-list-price.invoice-amount(if='{ data.get().listPrice > data.get().price }')
              | { renderCurrency(parentData.get('currency'), data.get().listPrice * data.get().quantity) } { parentData.get('currency').toUpperCase() }
      .promo
        .promo-label
          | Coupon
        .promo-row(class='{ green: promoMessage.indexOf("Applied") >= 0, red: promoMessage && promoMessage.indexOf("Applied") < 0 }')
          promocode.input(placeholder='Coupon')
          button(class='{ loading: applying, notify: !applying && data.get("order.promoCode") && !promoMessage }', onclick='{ applyPromoCode }')
            span &#10003;
            span &#10005;
      // .promo-message(if="{ data.get('order.promoCode') && !promoMessage && !applying }")
      //   | Don't forget to apply your code!
      // .promo-message(if='{ promoMessage }', class='{ green: promoMessage.indexOf("Applied") >= 0 }')
      //   | { promoMessage }
      .invoice-discount.invoice-line.animated.fadeInUp(if="{ data.get('order.discount') > 0 }")
        .invoice-label
          | Discount
        .invoice-amount
          | { renderCurrency(data.get('order.currency'), data.get('order.discount'))} { data.get('order.currency').toUpperCase() }
      .invoice-line
        .invoice-label
          | Subtotal
        .invoice-amount
          | { renderCurrency(data.get('order.currency'), data.get('order.subtotal'))} { data.get('order.currency').toUpperCase() }
      .invoice-line
        .invoice-label
          | Shipping
        .invoice-amount.not-bold
          | { renderCurrency(data.get('order.currency'), data.get('order.shipping'))} { data.get('order.currency').toUpperCase() }
      .invoice-line
        .invoice-label
          | Tax ({ data.get('order.taxRate') * 100 }%)
        .invoice-amount
          | { renderCurrency(data.get('order.currency'), data.get('order.tax'))} { data.get('order.currency').toUpperCase() }
      .invoice-line.invoice-total
        .invoice-label
          | Total
        .invoice-amount
          | { renderCurrency(data.get('order.currency'), data.get('order.total'))} { data.get('order.currency').toUpperCase() }
      .invoice-line.estimated-delivery
        .invoice-label
          | Estimated Delivery
        .invoice-amount
          | December 23
    span.notes
      p
        span.tax-notice Customers will be responsible for any VAT or customs and import duties.
